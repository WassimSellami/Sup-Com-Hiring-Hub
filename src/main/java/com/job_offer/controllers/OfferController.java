package com.job_offer.controllers;
import com.job_offer.services.OfferService;
import com.job_offer.models.Offer;
import com.job_offer.repository.OfferRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import java.util.Date;

@Controller // This means that this class is a Controller
@RequestMapping(path="/offer") // This means URL's start with /demo (after Application path)
public class OfferController {
    private final OfferService offerService;
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private OfferRepository offerRepository;

    public OfferController(OfferService offerService) {
        this.offerService = offerService;
    }

    @PostMapping(path="/add") // Map ONLY POST Requests
    public @ResponseBody String addNewOffer (@RequestParam String name) {
        // @ResponseBody means the returned String is the response, not a view name

        // @RequestParam means it is a parameter from the GET or POST request
        Offer new_offer = new Offer();
        new_offer.setName(name);
        offerRepository.save(new_offer);
        return "Saved";
    }

    @GetMapping(path="/all")
    public @ResponseBody Iterable<Offer> getAllOffers() {
        // This returns a JSON or XML with the users
        return offerRepository.findAll();
    }
    @DeleteMapping(path = "{offerId}")
    public void deleteOffer(@PathVariable("offerId") Long id){
        offerService.deleteOffer(id);
    }

    @PutMapping(path = "{offerId}")
    public void putOffer(
            @PathVariable("offerId") Long offerId,
            @RequestParam(required = false) String name,
            @RequestParam(required = false) String description,
            @RequestParam(required = false) String company,
            @RequestParam(required = false) Date duration,
            @RequestParam(required = false) boolean status,
            @RequestParam(required = false) String data_post,
            @RequestParam(required = false) String location,
            @RequestParam(required = false) String type){
        offerService.updateOffer(offerId, name, description,type,location, company, duration, status, data_post);
    }
}
//DELETE DONE
//POST DONE
//PUT DONE
//GET DONE